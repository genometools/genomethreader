%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86f Copyright 2001 Radical Eye Software
%%Title: dataflow.dvi
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips dataflow.dvi -o dataflow.ps
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2003.09.01:2048
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (dataflow.dvi)
@start
%DVIPSBitmapFont: Fa cmr12 12 34
/Fa 34 122 df<4AB4FC020F13E091387F80F8903901FC001C49487FD907E0130F494813
7F011FECFF80495A49C7FCA25B49EC7F00163E93C7FCACEE3F80B8FCA3C648C7FC167F16
3FB3B0486CEC7FC0007FD9FC1FB5FCA330467EC536>12 D<121EEA7F80A2EAFFC0A4EA7F
80A2EA1E000A0A78891B>46 D<B8FC17E017FC00019039C00003FF6C6C4801007FEF3FC0
717E717E717E84170384170184A760A21703601707604D5A4D5AEF7FC04DC7FCEE03FEEE
3FF091B65A17FC0280C7B47EEF1FC0EF0FF0717E717E717E717E1980187F19C0A2183F19
E0A8F07FC0A2198018FF4D1300A24D5AEF0FFC4D5AEF7FE048486C903803FFC0B9C7FC17
FC17C03B447CC345>66 D<B8FC17F017FC00019039C00007FF6C499038007FC0017FED1F
E0EF07F0EF03FC717E717E84727E727E727EA2727E85180385A2180185A38584A31A80AD
1A00A36061A361180361180761180F614E5A183F614EC7FC18FEEF03FC4D5AEF1FE001FF
ED7FC0486DD907FFC8FCB812FC17F094C9FC41447CC34B>68 D<DB0FFE146092B500C013
E0020314F0913A0FFC01FC0191393FC0003E02FFC7EA0F83D903FCEC03C74948EC01E749
48EC00FF4948157F4948153F4948151F49C9120F485A491607120348481603A248481601
A248481600A2123FA2491760127FA396C7FC485AAD4CB612C06C7EA293C7387FF000725A
003F171F7FA2121F7F120FA26C7EA26C7E6C7EA26C7E6D7E6D6C153F6D7E6D6C157F6D6C
15E7D903FEEC01C7D900FFEC0383DA3FE0EB0F01DA0FFCEBFE000203B500F81360020002
E090C7FCDB0FFEC9FC42487BC54D>71 D<B6D8C003B6FCA3000101E0C70007138026007F
80913801FE00B3A991B7FCA30280C71201B3AC2601FFE0913807FF80B6D8C003B6FCA340
447CC349>I<B612F8A3000101E0C9FC6C6C5A5CB3B31830A418701860A518E0A3EF01C0
A217031707A2170F173F177FEE01FF48486C011F1380B9FCA334447CC33D>76
D<B56C933807FFFC6E5EA20001F1FE0026006FE0EE1BF8A3D967F01633A2D963F81663A3
D961FC16C3A3D960FEED0183A2027FED0303A36E6C1406A36E6C140CA26E6C1418A36E6C
1430A36E6C1460A26E6C14C0A36E6CEB0180A3037FEB0300A292383F8006A36F6C5AA36F
6C5AA26F6C5AA36F6C5AA36F6C5AA26FB45AA370C7FC13F0A2486C143ED80FFFEF0FFEB5
00F0011C0107B512FCA34E447BC359>I<B712FCEEFFC017F800019039C0000FFC6C6C48
EB01FF9338007F80EF1FE0170FEF07F018F8EF03FCA218FE1701A218FFA718FEA2170318
FCA2EF07F818F0EF0FE0EF1FC0EF7F80933801FE00EE0FFC91B612F017800280C9FCB3AA
3801FFE0B612C0A338447CC342>80 D<49B41303010FEBE007013F13F89039FE00FE0FD8
01F8131FD807E0EB079F49EB03DF48486DB4FC48C8FC4881003E81127E82127C00FC81A2
82A37E82A27EA26C6C91C7FC7F7FEA3FF813FE381FFFE06C13FE6CEBFFE06C14FC6C14FF
6C15C0013F14F0010F80010180D9001F7F14019138001FFF03031380816F13C0167F163F
161F17E000C0150FA31607A37EA36C16C0160F7E17806C151F6C16006C5D6D147ED8FBC0
5CD8F9F0495AD8F07C495A90393FC00FE0D8E00FB51280010149C7FC39C0003FF02B487B
C536>83 D<B692383FFFF0A3000301E003071300C649ED01FC4A5E017F705A6E5E133F61
6E1501011F5FA26D6C4BC7FCA28001071606A26E150E0103160CA26D6C5DA2806D5EA26F
1470027F156081023F5DA281021F4A5AA26F1303020F92C8FC8102071406A26F130E0203
140CA26E6C5BA2816E5CA2EE8070037F1360A26F6C5AA216E092381FE180A216F3030F90
C9FC16FBED07FEA36F5AA36F5AA26F5AA3166044467EC349>86 D<EB07FC90383FFF8090
38F80FE03903C003F048C66C7E000E6D7ED80FC0137E486C137F6D6D7EA36F7EA26C5AEA
0380C8FCA4EC0FFF49B5FC90380FFE1FEB3FC0EBFF00EA03FC485A485A485A485A127F5B
176048C7FCA3153FA36D137F007F14EF6D9038C7E0C0003F13013A1FE00783F13B07F81E
03FF802701FFFC0113003A001FE0007C2B2E7CAC31>97 D<EA01FC12FFA3120712031201
B3EC03FC91380FFF8091383C07E091387001F89039FDE0007E02807F01FFEC1F8091C713
C049EC0FE049140717F0A2EE03F8A217FCA2160117FEAB17FC1603A217F8A2EE07F0A26D
EC0FE017C06D141F01FBEC3F80D9F380EB7E00D9E1C05B9039E0F001F89039C03C07E090
39801FFF80C7D803FCC7FC2F467DC436>I<EC7F80903803FFF090380FC07C90383F000F
01FCEB03804848EB01C00003140F4848EB1FE049133F120F485AA2485AED1FC0007FEC07
0092C7FCA290C9FC5AAB7E7FA2123F16307F001F15706C6C146016E06C6C14C06C6C1301
0001EC03806C6CEB0700013F131E90381FC078903807FFF001001380242E7DAC2B>I<16
7FED3FFFA315018182B3EC7F80903803FFF090380FC07C90383F000E017E1307496D5AD8
03F87F48487F5B000F81485AA2485AA2127FA290C8FC5AAB7E7FA2123FA26C7EA2000F5D
7F6C6C5B00035C6C6C9038077F806C6C010E13C0013F011C13FE90380FC0F8903803FFE0
9026007F0013002F467DC436>I<EB01FE903807FFC090381F03F090387E00FC49137E48
487F485A4848EB1F80000F15C049130F121F484814E01507A2007F15F090C7FCA25AA390
B6FCA290C9FCA67EA27FA2123F16306C7E1670000F15606D14E06C6C14C0000314016C6C
EB03806C6CEB0700013E131E90381F80F8903803FFE0010090C7FC242E7DAC2B>I<EC0F
E0EC7FF8903801F81E903803F03F90390FE07F8090381FC0FF5C133F495AA2ED7F0001FE
131C92C7FCAFB67EA3C648C8FCB3B2486C7E007F13FFA321467EC51E>I<EE0F80D901FC
EB7FE0903A0FFF81F0F090393F07E3819039FC01FF033A01F800FE014848017E13E00007
027FC7FC497F000F8149131F001F81A9000F5D6D133F000792C7FC6D5B0003147E6C6C5B
6D485A3903BF07E090380FFF80260701FCC8FC90CAFCA25AA37F6C7E7F90B512F86C14FF
16E06C15F86C6C8048B67E3A07C0000FFF48481300003FC8EA3F80003E151F48ED0FC0A2
481507A56C150F007C1680007E151F003E16006C153E6C6C5CD807E0495AD801F8EB07E0
D8007FEB3F8090261FFFFEC7FC010113E02C427DAC31>I<EA01FC12FFA3120712031201
B3EC01FE913807FFC091381E07F091383801F802707FECE000D9FDC07F5C01FF147F91C7
FCA25BA35BB3A8486CECFF80B5D8F83F13FEA32F457DC436>I<EA01E0EA07F8A2487EA4
6C5AA2EA01E0C8FCADEA01FC12FFA3120712031201B3B0487EB512F8A315437DC21C>I<
EA01FC12FFA3120712031201B3A292381FFFE0A36F1300ED07F816E05E5E030EC7FC5D5D
5D5D4A5A4A5A4AC8FC5CEC3F804A7E14FF9038FDCFE09038FF8FF01407496C7E01FC7F14
016E7E81816F7E82151F6F7E821507826F7E8282486C491380B5D8F81F13F8A32D457DC4
33>107 D<EA01FC12FFA3120712031201B3B3B3A5487EB512F8A315457DC41C>I<D801FC
01FFEC1FE000FF010701E0EBFFFC913B0F03F801E07F913C3C01FC07803F800007903C70
00FE0E001FC0000349D97E1C130F2601FDC0D97F38804A143001FFDA3FF06D7E91C75BA2
495DA3495DB3A8486C4A6C497EB5D8F81FB50003B512E0A34B2C7DAB52>I<3901FC01FE
00FF903807FFC091381E07F091383801F8000701707F0003EBE0002601FDC07F5C01FF14
7F91C7FCA25BA35BB3A8486CECFF80B5D8F83F13FEA32F2C7DAB36>I<EC7F80903803FF
F090380FC0FC90383E001F496D7E496D7E48486D7E48486D7E48486D7E000F81A2484814
7E003F157FA290C87E481680A44816C0AA6C1680A26D147F003F1600A2001F157E6D14FE
000F5D6D130100075D6C6C495A6C6C495A6C6C495A013E49C7FC90381FC0FE903807FFF8
9038007F802A2E7DAC31>I<3901FC03FC00FF90380FFF8091383C07E091387001F83A07
FDE000FE00030180137FD801FFEC3F8091C7EA1FC04915E049140F17F0160717F8160317
FCA3EE01FEABEE03FCA3EE07F8A217F0160F6D15E0EE1FC06D143F17806EEB7E00D9FDC0
5B9039FCF003F891383C0FE091381FFF80DA03FCC7FC91C9FCAE487EB512F8A32F3F7DAB
36>I<91387F8003903903FFE00790380FE07890393F801C0F90387E000E496D5AD803F8
EB039F0007EC01BF4914FF48487F121F5B003F81A2485AA348C8FCAB6C7EA3123F7F121F
6D5C120F6D5B12076C6C5B6C6C497E6C6C130E013F131C90380FC0F8903803FFE0903800
7F0091C7FCAEEEFF80033F13FEA32F3F7DAB33>I<3903F803F000FFEB1FFCEC3C3EEC70
7F0007EBE0FF3803F9C000015B13FBEC007E153C01FF13005BA45BB3A748B4FCB512FEA3
202C7DAB26>I<90383FE0183901FFFC383907E01F78390F0003F8001E1301481300007C
1478127800F81438A21518A27EA27E6C6C13006C7E13FC383FFFE06C13FC6C13FF6C14C0
6C14E0C614F0011F13F81300EC0FFC140300C0EB01FE1400157E7E153EA27EA36C143C6C
147C15786C14F86CEB01F039F38003E039F1F00F8039E07FFE0038C00FF01F2E7DAC26>
I<1306A5130EA4131EA3133E137EA213FE12011207001FB512F0B6FCA2C648C7FCB3A415
0CAA017E131C017F1318A26D133890381F8030ECC070903807E0E0903801FFC09038007F
001E3E7EBC26>I<D801FC147F00FFEC3FFFA300071401000380000181B3A85EA35DA212
006D5B017E9038077F80017F010E13C06D011C13FE90380FC078903803FFF09026007F80
13002F2D7DAB36>I<B539F001FFFCA3000790C7EA7FE06C48EC1F8000011600160E1200
160C017F5CA280013F5CA26E1370011F146080010F5CA2ECF00101075CA26D6C48C7FCA2
6E5A01011306A26D6C5AA214FF6E5AA215B8EC3FB015F06E5AA36E5AA26E5AA36EC8FC2E
2C7EAA33>I<B539F007FFFCA30003D9C00113C0C6496C1300017F14FC013F5C6E13E06D
7E010F495A6D6C485A02F890C7FC903803FC060101130E6E5A903800FF186E5AEC3FF05D
141F140F6E7E81140FEC0DFCEC19FEEC38FF4A7E9138603F8002C07F0101131F49486C7E
02007F01066D7E010E1303496D7E013C80017C80D801FC1580D80FFE4913C0B5D8800F13
FFA3302B7FAA33>120 D<B539F001FFFCA3000790C7EA7FE06C48EC1F8000011600160E
0000150C6D141C6D1418A26E1338013F1430A26D6C5BA26E13E0010F5CA26D6C485AA2EC
F803010391C7FCA2903801FC06A2ECFE0E0100130CA2EC7F18A215B8EC3FB0A2EC1FE0A3
6E5AA26E5AA36EC8FCA21406A35CA25CA2123C007E5BB4FC5CA25CEAFE01387C0380D870
07C9FCEA3C1EEA0FFCEA03F02E3F7EAA33>I E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop 4 setlinewidth np 1232 583 423 176 0.00 360.00
ellipse st 1098 544 a Fa(option)1079 665 y(parsing)p
np 809 1412 a 1656 1412 li 1656 1059 li 809 1059 li closepath
st 1011 1197 a(all)30 b(options)840 1318 y(passed)k(to)e(program)p
np 1232 1889 423 176 0.00 360.00 ellipse st 1079 1851
a(loading)1022 1971 y(input)g(\014les)p np 809 2930 a
1656 2930 li 1656 2366 li 809 2366 li closepath st 858
2489 a(genomic)f(sequence)843 2609 y(reference)j(sequence)1027
2729 y(splice)e(site)1017 2850 y(parameter)p np 1232
3407 423 176 0.00 360.00 ellipse st 1065 3368 a(Vmatc)m(h)1133
3488 y(\014lter)p np 809 4236 a 1656 4236 li 1656 3883
li 809 3883 li closepath st 1096 4021 a(List)f(of)1145
4141 y(Hits)p np -338 4236 a 509 4236 li 509 3883 li
-338 3883 li closepath st 16 4021 a(DP)-131 4141 y(parameter)p
np 1232 4924 635 264 0.00 360.00 ellipse st 941 4825
a(DP)h(algorithm)996 4946 y(for)g(optimal)863 5066 y(spliced)g
(alignmen)m(t)p np 2167 5101 a 3014 5101 li 3014 4748
li 2167 4748 li closepath st 2358 4885 a(one)h(spliced)2382
5006 y(alignmen)m(t)p np 2591 4183 635 264 0.00 360.00
ellipse st 2343 4084 a(sa)m(v)m(e)h(spliced)2325 4205
y(alignmen)m(t)c(in)2357 4325 y(binary)j(tree)p np 2167
3618 a 3014 3618 li 3014 3266 li 2167 3266 li closepath
st 2357 3343 a(binary)g(tree)2392 3464 y(of)f(spliced)2362
3584 y(alignmen)m(ts)p np 2591 2789 423 176 0.00 360.00
ellipse st 2288 2751 a(output)h(spliced)2362 2871 y(alignmen)m(ts)p
np 2167 2312 a 3014 2312 li 3014 1959 li 2167 1959 li
closepath st 2448 2037 a(output)2392 2157 y(of)f(spliced)2362
2278 y(alignmen)m(ts)p np 3738 2789 423 176 0.00 360.00
ellipse st 3557 2751 a(compute)3618 2871 y(PGLs)p np
[ 4 26.14 ] 0 setdash 3314 2312 a 4162 2312 li st [ 4
25.08 ] 0 setdash 4162 2312 a 4162 1959 li st [ 4 26.14
] 0 setdash 4162 1959 a 3314 1959 li st [ 4 25.08 ] 0
setdash 3314 1959 a 3314 2312 li st [] 0 setdash [] 0 setdash
3595 2097 a(output)3562 2218 y(of)g(PGLs)p np 1956 1412
a 2803 1412 li 2803 1059 li 1956 1059 li closepath st
2246 1137 a(BSSM)2163 1257 y(parameter)2298 1378 y(\014les)p
np 3526 1236 423 176 0.00 360.00 ellipse st 3180 1257
a(mkbssmparam.x)p np -338 2066 a 509 2066 li 509 1712
li -338 1712 li closepath st -85 1790 a(index)h(of)-182
1911 y(genomic)e(and)-304 2031 y(reference)j(sequence)p
np 85 1236 423 176 0.00 360.00 ellipse st -127 1257 a(mkvtree.x)p
np 1232 759 a 1232 1059 li st 0.000 setgray np 1247 999
a 1232 1059 li 1217 999 li closepath fil 0 setgray np
1247 999 a 1232 1059 li 1217 999 li closepath st np 1232
1412 a 1232 1712 li st 0.000 setgray np 1247 1652 a 1232
1712 li 1217 1652 li closepath fil 0 setgray np 1247
1652 a 1232 1712 li 1217 1652 li closepath st np 1232
2066 a 1232 2366 li st 0.000 setgray np 1247 2306 a 1232
2366 li 1217 2306 li closepath fil 0 setgray np 1247
2306 a 1232 2366 li 1217 2306 li closepath st np 1232
2930 a 1232 3230 li st 0.000 setgray np 1247 3170 a 1232
3230 li 1217 3170 li closepath fil 0 setgray np 1247
3170 a 1232 3230 li 1217 3170 li closepath st np 1232
3583 a 1232 3883 li st 0.000 setgray np 1247 3823 a 1232
3883 li 1217 3823 li closepath fil 0 setgray np 1247
3823 a 1232 3883 li 1217 3823 li closepath st np 1232
3583 a 85 3883 li st 0.000 setgray np 147 3882 a 85 3883
li 139 3854 li closepath fil 0 setgray np 147 3882 a
85 3883 li 139 3854 li closepath st np 85 4236 a 1232
4659 li st 0.000 setgray np 1181 4625 a 1232 4659 li
1171 4653 li closepath fil 0 setgray np 1181 4625 a 1232
4659 li 1171 4653 li closepath st np 1232 4236 a 1232
4659 li st 0.000 setgray np 1247 4599 a 1232 4659 li
1217 4599 li closepath fil 0 setgray np 1247 4599 a 1232
4659 li 1217 4599 li closepath st 1046 4409 a(for)e(ev)m(ery)1174
4529 y(hit)p np 1867 4924 a 2167 4924 li st 0.000 setgray
np 2107 4909 a 2167 4924 li 2107 4939 li closepath fil
0 setgray np 2107 4909 a 2167 4924 li 2107 4939 li closepath
st np [ 27.27 ] 0 setdash 2591 4748 a 2591 4448 li st
[] 0 setdash [] 0 setdash 0.000 setgray np 2576 4508
a 2591 4448 li 2606 4508 li closepath fil 0 setgray np
2576 4508 a 2591 4448 li 2606 4508 li closepath st 2420
4619 a(p)s(ossibly)p np 2591 3918 a 2591 3618 li st 0.000 setgray
np 2576 3678 a 2591 3618 li 2606 3678 li closepath fil
0 setgray np 2576 3678 a 2591 3618 li 2606 3678 li closepath
st np 2591 3266 a 2591 2966 li st 0.000 setgray np 2576
3026 a 2591 2966 li 2606 3026 li closepath fil 0 setgray
np 2576 3026 a 2591 2966 li 2606 3026 li closepath st
np [ 4 26.30 ] 0 setdash 2591 3266 a 3738 2966 li st
[] 0 setdash [] 0 setdash 0.000 setgray np 3676 2966
a 3738 2966 li 3684 2995 li closepath fil 0 setgray np
3676 2966 a 3738 2966 li 3684 2995 li closepath st np
2591 2612 a 2591 2312 li st 0.000 setgray np 2576 2372
a 2591 2312 li 2606 2372 li closepath fil 0 setgray np
2576 2372 a 2591 2312 li 2606 2372 li closepath st np
[ 4 25.60 ] 0 setdash 3738 2612 a 3738 2312 li st [] 0 setdash
[] 0 setdash 0.000 setgray np 3723 2372 a 3738 2312 li
3753 2372 li closepath fil 0 setgray np 3723 2372 a 3738
2312 li 3753 2372 li closepath st np 2379 1412 a 1656
1889 li st 0.000 setgray np 1714 1868 a 1656 1889 li
1697 1844 li closepath fil 0 setgray np 1714 1868 a 1656
1889 li 1697 1844 li closepath st np 3103 1236 a 2803
1236 li st 0.000 setgray np 2863 1251 a 2803 1236 li
2863 1221 li closepath fil 0 setgray np 2863 1251 a 2803
1236 li 2863 1221 li closepath st np 509 1889 a 809 1889
li st 0.000 setgray np 749 1874 a 809 1889 li 749 1904
li closepath fil 0 setgray np 749 1874 a 809 1889 li
749 1904 li closepath st np 85 1412 a 85 1712 li st 0.000 setgray
np 100 1652 a 85 1712 li 70 1652 li closepath fil 0 setgray
np 100 1652 a 85 1712 li 70 1652 li closepath st eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
